para saber qué version de symfony uso: php bin/console --version

1- User     - Admin et Technicien
    - id
    - name
    - lastname
    - email
    - password
	-createdAt

2- Ticket
    - name 
    - description
    - categories
	-created At
	-update At
	-priority (agregue una constraint para que sea entre 1 y 3)

    
3- Category
    - name 
    - XXXXdescriptionNO
    - tickets
	
	
4. Cliente EL cliente puede crear tickets, el tech tambien puede crear??? Entidad creada pero sin relaciones todavia 07/02/2024  
	-username
	-email
	-password
	-createdAt
	
5. Entidad comentaire? ligada a tickets
	
	
Define the relationships between entities:
Customer and Ticket: Add a ManyToOne relationship from the Ticket entity to the Customer entity. This means many tickets belong to one customer.
User and Ticket: Add a ManyToOne relationship from the Ticket entity to the User entity. This means many tickets can be assigned to one user.
Ticket and Category: Add a ManyToOne relationship from the Ticket entity to the Category entity. This means many tickets can have one category.

------------------------------------------------------------------------
Pregunta quién puede crear tickets? el user tech y admin y el cliente?

Posible solution: Cada user tech puede crear un ticket y solo puede ver sus tickets y gestionarlos
Relation desde la entidad User: OneToMany, Each User can relate to (can have) many Ticket objects.
               Each Ticket relates to (has) one User.
El admin puede ver todos los tickets y qué technico lo gestiona.

Los tickets los crea y gestiona el usuario y el admin

Las categorias solo las gestiona el ADMIN

- el cliente puede ver el ticket creado por el tecnico??????
aun no tengo respuesta


	
	
	Equipamientos?
	
	
	
	Symfony relations - Mapping the ManyToOne Relationship
	https://symfony.com/doc/7.1/doctrine/associations.html
	
	cada category puede estar asociada a many tickets. Pero cada ticket solo puede estar asociado a una sola category. 
	En resumen:many tickets to one category (or equivalently, one category to many tickets).
	
	
	En la aplicacion el cliente contacta por telefono con soporte y soporte crea el ticket y lo asigna a un tecnico. 
	Hay un rol de administrador y un rol de tecnico con el crud el admin podra asignar un ticket a un tecnico
	

	Etapas para crear entity
	comandos:
	
	php bin/console make:entity
	
	make a migration:
	
	php bin/console make:migration
	php bin/console doctrine:migrations:migrate

	Validation de données
	https://symfony.com/doc/current/validation.html

	Constraints
	En mi entidad categoria pondre una constraints de que el campo no puede estar vacio
	#[Assert\NotBlank]
	
	
	CRUD Category
	php bin/console make:controller CategoryController
	
	apres le crud j'ai installer le paginator
	categoryController on a fait une injection de dependences avec Ingredient repository( sert a recuperer les donnes de la bd)
	CategoryController (instale una extension en vscode PHP DOCBloquer
	
	<?php

namespace App\Controller;

use App\Repository\CategoryRepository;
use Knp\Component\Pager\PaginatorInterface;
use Symfony\Component\HttpFoundation\Response;
use Symfony\Component\Routing\Annotation\Route;
use Symfony\Bundle\FrameworkBundle\Controller\AbstractController;
use Symfony\Component\HttpFoundation\Request;

class CategoryController extends AbstractController
{
    /**
     * Undocumented function
     *
     * @param CategoryRepository $categoryRepository
     * @param PaginatorInterface $paginator
     * @param Request $request
     * @return Response
     */
    #[Route('/category', name: 'app_category', methods:['GET'])]
    public function index(CategoryRepository $categoryRepository, PaginatorInterface $paginator, Request $request): Response
    {

        $categories = $paginator->paginate(
            $categoryRepository->findAll(),
            $request->query->getInt('page', 1), /*page number*/
            10 /*limit per page*/
        );

        //dd($categories); pour voir les donnees
        return $this->render('category/index.html.twig', [
            'categories' => $categories
        ]);
    }
}

apres une condition pour dire sil n'a pas de categories

**********
Creation formulaire pour notre crud Category
Symfony recommande de mettre le moins de logique possible dans les contrôleurs.
C'est pourquoi il est préférable de déplacer les formulaires complexes vers des classes dédiées plutôt que de les définir 
dans les actions du contrôleur. De plus, les formulaires définis dans les classes peuvent être réutilisés dans plusieurs actions et services.

Processing le formulaire

CRUD category ok

************

Entity Ticket OK

Cuando se actualiza una entidad
comandos:
php bin/console doctrine:migrations:diff

php bin/console cache:clear

Creation crud para Ticket
new ticketedit Ticket controller
-creation de formulario
	php bin/console make:form

COn esto se crea el archivo TicketTyoe, ligado a la entidad Ticket

-Para que el formulario de ticket afiche la parte de categoria que viene de de la entidad categoria se tiene que ir a a la entidad Categoria y agregar la funcion _toString


siguiendo con la categoria en TicketType documentation
https://symfony.com/doc/6.4/reference/forms/types/entity.html#ref-form-entity-query-builder

appel a l'entity Category (EntityType) pour recuperer les donnes avec une query 




TODO!!!!!!!!!!!!!!
Function edit en ticket NO FUNCIONABA al editar, al final el error estaba en el formulario de ticket quite este codigo y solo deje : 	{{ form(form)}}

		{# {{ form_start(form) }}

		<div class="form-group">
			{{ form_label(form.name) }}
			{{ form_widget(form.name) }}
			<div class="form-error">
				{{ form_errors(form.name) }}
			</div>
		</div>

		<div class="form-group">
			{{ form_label(form.description) }}
			{{ form_widget(form.description) }}
			<div class="form-error">
				{{ form_errors(form.description) }}
			</div>
		</div>

		<div class="form-group">
			{{ form_label(form.priority) }}
			{{ form_widget(form.priority) }}
			<div class="form-error">
				{{ form_errors(form.priority) }}
			</div>
		</div>

		<div class="form-group">
			{{ form_label(form.category) }}
			{{ form_widget(form.category) }}
			<div class="form-error">
				{{ form_errors(form.category) }}
			</div>
		</div>

		<div class="form-group">
			{{ form_row(form.submit) }}
		</div> #}

	TODO:
	En la funcion delete  agregar un modal que diga está seguro que desea eliminar el ticket
	
	TODO: Crear un campo en ticket que diga Ticket resuelto (boolean) Si o no
	
	*******
	La securité en symfony ce gere avec le Bundle Security (moi je deja installe ca avec la app). Les autorisations dans Symfony sont toujours liées à un objet utilisateur. 
	Si vous devez sécuriser (des parties de) votre application, vous devez créer une classe d'utilisateurs. 
	Il s'agit d'une classe qui implémente UserInterface . Il s'agit souvent d'une entité Doctrine, mais vous pouvez également utiliser une classe d'utilisateurs dédiée à la sécurité.
		ToDo:
		-Securité et compte utilisateur
		php bin/console make:user
		
		En la entidad User:
		On a cree en User une var $plainPassword.
		apres:     
		public function __construct()
			{
        $this->createdAt = new \DateTimeImmutable();
			}
		La classe \DateTimeImmutable() fait partie de l'extension DateTime de PHP et est utilisée pour créer des objets de date et d'heure immuables (non modifiables).
		
		----
		
		
		Entity Client OK, pero sin relaciones todavia
		
		
		
		
		-Entity User OK
		
		*** Quizas hacer fixtures por aprender y rellenar la base de datos ???? Fixture User Video 10 min 13:05 https://www.youtube.com/watch?v=dODeLDHSnlQ&list=PLUiuGjup8Vg5IGd199d_wvs-Dn8uepCcA&index=10
		***
		
		-Mise en place de fixtures pour tester la aplication composer require --dev orm-fixtures
		Despues instale faker php libreria que genera falsos datos https://fakerphp.github.io/
		comandos:php bin/console d:fixtures:load
		
		Para mejorar el hasheado del password voy a usar Entity Listeners
		Entity listeners that are services must be registered with the entity listener resolver. On top of the annotation in the entity class, 
		you have to tag the service with doctrine.orm.entity_listener for it to be automatically added to the resolver. 
		Use the (optional) entity_manager attribute to specify which entity manager it should be registered with.
		
		Primer codigo para crear usuarios en AppFixtures:
		
		        //Users 
        for ($i = 0; $i <10 ; $i++){
            $user = new User();
            $user->setName($this->faker->firstName())
                 ->setLastname($this->faker->lastName())
                ->setEmail($this->faker->email())
                ->setRoles(['ROLE_USER']);
            //hashed le password
            $hashPasword = $this->passwordHasher->hashPassword(
                $user,
                'password'
            );

            $user->setPassword($hashPasword);

            $manager->persist($user);
        }
		
		**********
		Exporter la logique de hasher les password pour eviter de charger le petition et on le fait avec EntityListener. En Service.yaml j'ai ajoute un nouveau service
		Para crear un nuevo servicio en config->services.yaml
		    App\EntityListener\:
			resource: '../src/EntityListener/'
			tags:['doctrine.orm.entity_listener']
			
		Y en la entidad user tambien tuve que hacer cambios
		***OJO***
		en services.yaml, hay que tener cuidado con la indentacion, si no estan al mismo nivel da error
		
		https://symfony.com/bundles/DoctrineBundle/current/entity-listeners.html
		
		
		-Validation avec les assert Ok
		-Encodage mot de passe OK
		
		-creation formulaire de connexion OK http://127.0.0.1:8000/connexion
		
		La section "firewalls" de config/packages/security.yaml est la plus importante. Un "pare-feu" est votre système d'authentification : le pare-feu définit 
		quelles parties de votre application sont sécurisées et comment vos utilisateurs pourront s'authentifier (par exemple, formulaire de connexion, jeton API, etc). 
		
		-Authentification user -> form login
		
		-Creation de un controller para gestionar el login y registro : php bin/console make:controller SecurityController
		
		Al crear este controller, se creo en template automaticamente una carpeta que se llama security, el ella el index.html.twig, lo cambiaré por login.html.twig
		
		en securityController la function login en name: app_security (original) yo la cambie a app_login
		
		TODO: insertar logout en el header o navbar
	
		
		
	creation formulaire inscription???
	
	
	Modification profil utilisateur - para modificar vamos a crear un formulario que permita modificar al user. php bin/console make:form userType
	
	Despues del UserType, cree un UserController para poder modificar un usaurio OK
	
	Hay que segurizar la ruta: http://127.0.0.1:8000/user/edition/22
	
	TODO:
	modification mot de passe??
	_______________________________________________________________________________________________________________________________________
	Posible solution pour probleme de migrationParfois ça peut créer des soucis quand il y a déjà de la donnée dans la base de données.
	J'ai d'abord drop la base de données : symfony console d:d:d --force    
	Ensuite je la recrée :  symfony console d:d:c
	Puis je lance les fixtures: symfony console d:f:l  
	----------------------------------------------------------------------------------------------------------------------------------------
	taches realisés:
	Mise en place de la relation entre l'entite User et l'entité Ticket OK
	MOdification fixtures pour lies les tickets avec user OK
	aficher dans la session de un user ces tickets OK
	Lier un ticket au user connecte lors de sa création OK
	
	
	Mise a jour de menu x les users OK
	Mise a jour menu x les anonymes OK
	
	Problema con ISGRANTED no funciona, en reemplazo utlicé el metodo AccesDeniedException pour restreindre l'acces aux routes de edit ticket et edit utilisateur
	
	Ej de condition para restringir la edicion de un ticket que no es el suyo:
	       // Check if the logged-in user is the owner of the ticket
        if ($ticket->getUser() !== $this->getUser()) {
            throw new AccessDeniedException('Pas autorisé à modifier ce ticket');
        }

	
	Restringir ruta new ticket y borrar ticket mirar chatgpt OK
	Restreindre l'accès aux routes ......x ej: http://127.0.0.1:8000/ticket/newTicket et 
	http://127.0.0.1:8000/ticket/edition/4
	et ticket/delete son segurise en security.yaml          
		  - { path: ^/ticket/newTicket, roles: ROLE_USER }
          - { path: ^/ticket/delete/[0-9]+$, roles: ROLE_USER }
		  
		  
		  http://127.0.0.1:8000/user/edition/4 aussi et securisee OK
		  http://127.0.0.1:8000/ticket/delete/13 Securisée cuando un usuario intenta suprimir un ticket que no es el suyo, aparece mensaje
		  
		SI el utilisateur no tiene ticket, debería mostrarle el boton crear un nuevo ticket OK 
		  

TODO: 
	METTRE DOCKER DANS MON PROJECT CHERCHER???
	Api PLATFORM?
	Agregar isDone como boolen a Ticket y agregarlo en la view A FAIRE!!!!!!!!!!!
		
	
	
	----------------------------------
	Categoria: verificar las rutas para que solo sean accesibles con el USER_ADMIN a faire.....
	------------------------------------
	
	Mettre en place un formulaire de contact, pour le support, apres le tech contacterai au client et creara le ticket
		- Creation de formulaire
		- Mettre en place recaptcha
	Formulaire: Nom, prenom, email, message et sujet createdAt
TODO:

CLIENT Darles un rol? ROL_CLIENT ???? La entidad cliente no esta asociada a un rol, si intento conectarme desde el login no lo reconoce.
Por CLIENT, debo crear un CLientController para generar las vistas de Cliente

Voy a crear una entidad Contact, cree fixtures por contact tambien

symfony console doctrine:fixtures:load --append comando para actualizar AppFixtures, sin cambiar los datos que ya existian


- CRee un ContactController que va a crear las vistas
Luego cree un ContactType para gestionar el formulario : php bin/console make:form ContactType

Una vez creado el form en COntactType y haber creado la funcion index desde ContactController, voy a editar el template Contact/index.html.twig

Formulaire contact OK http://127.0.0.1:8000/contact

Servicios: php bin/console debug:autowiring  para ver todos los servicios que ofrece symfony. 
El interes es crear uno propio y externalizarlo y poder customizarlo como uno necesite. 

Mise en place d'un service Email, car actuellement l'envoi est gere au sein du ContactController et on doit mettre le moins de logique dans le controller.
--------------------------------------------
Code ancien au sein du ContactController
            //Email

            $email = (new TemplatedEmail())
                ->from($contact->getEmail())
                ->to('admin@atelierdesk.com')
                ->subject($contact->getSubject())
                ->htmlTemplate('emails/contact.html.twig')

            
                // pass variables (name => value) to the template
                ->context([
                    'contact' => $contact

                ]);

            $mailer->send($email);
			
--------------------------------------------
Creation Folder Service et al interieur MailService.php


Envoyer un email. Me cree una cuenta en Mailtrap con veroclementine2000@gmail.com, para hacer los tests de envio de email.
Configuracion Mailtrap  https://mailtrap.io/inboxes/2601841/messages/4028013406
admin@atelierdesk.com
Todo
Google recaptcha?? peut etre installer apres


-----
Mise en place Easy Admin Sisteme d' administration pour gerer categories, users, formulaires, etc.

composer require easycorp/easyadmin-bundle

http://127.0.0.1:8000/admin

********************************************************************************************
ERROR AND SOLUTION
PHP Intl extension enabling issue when using date/time fields in EasyAdmin backends #4753

Solution: On windows juste remove semicolon in php.ini
;extension=gmp
extension=intl
;extension=imap
And restart server.

*********************************************************************************************

EN Easy Admin les utilisateurs o User, je les appele Technicien. (A faire si je change dans le crud de la app Users x Tecniciens)

EasyAdmin, se puede borrar un ticket.
Utilisateur se puede borrar solo si no tiene tickets
categories se puede borrar si no está asociada a un ticket
CLients se pueden borrar y editar
Contact se pueden borrar y editar
